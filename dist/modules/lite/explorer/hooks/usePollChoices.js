'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});exports.usePollChoices=void 0;const useNotification_1=require('../../../common/hooks/useNotification');const react_1=require('react');const config_1=require('../../../../services/config');const node_fetch_1=__importDefault(require('node-fetch'));const usePollChoices=(poll,refresh)=>{const [choices,setChoices]=(0,react_1.useState)([]);const openNotification=(0,useNotification_1.useNotification)();(0,react_1.useEffect)(()=>{function fetchChoices(){return __awaiter(this,void 0,void 0,function*(){if(poll){yield(0,node_fetch_1.default)(`${(0,config_1.getEnv)(config_1.EnvKey.REACT_APP_LITE_API_URL)}/choices/${poll._id}/find`).then(response=>__awaiter(this,void 0,void 0,function*(){if(!response.ok){openNotification({message:'An error has occurred',autoHideDuration:2000,variant:'error'});return;}const records=yield response.json();setChoices(records);return;}));}});}fetchChoices();return;},[poll,refresh]);return choices;};exports.usePollChoices=usePollChoices;