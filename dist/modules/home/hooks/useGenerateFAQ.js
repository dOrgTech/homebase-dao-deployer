'use strict';var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||('get'in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,'default',{enumerable:true,value:v});}:function(o,v){o['default']=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!=='default'&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});exports.useGenerateFAQ=void 0;const react_1=require('react');const node_fetch_1=__importDefault(require('node-fetch'));const FILE_NAME='faq.md';const QUESTION_DELIMITER='<question>';const ANSWER_DELIMITER='<answer>';const useGenerateFAQ=()=>{const [faqFile,setFaqFile]=(0,react_1.useState)('');const [questionsToRender,setQuestionToRender]=(0,react_1.useState)([]);const [answersToRender,setAnswerToRender]=(0,react_1.useState)([]);const [faqList,setFaqList]=(0,react_1.useState)([]);(0,react_1.useEffect)(()=>{Promise.resolve(`${`../utils/${FILE_NAME}`}`).then(s=>__importStar(require(s))).then(res=>{(0,node_fetch_1.default)(res.default).then(res=>res.text()).then(res=>setFaqFile(res));}).catch(error=>console.log(error));});(0,react_1.useEffect)(()=>{const questionsList=faqFile.split(QUESTION_DELIMITER);const answerList=faqFile.split(ANSWER_DELIMITER);if(questionsList.length>0){const questions=[];questionsList.forEach(word=>{if(word!==''&&!word.includes('\n')&&!word.includes(ANSWER_DELIMITER)){questions.push(word);}});setQuestionToRender(questions);}if(answerList.length>0){const answers=[];answerList.forEach(word=>{if(word!==''&&!word.includes(QUESTION_DELIMITER)){answers.push(word);}});setAnswerToRender(answers.filter(a=>a!=='\n'));}},[faqFile]);(0,react_1.useEffect)(()=>{if(questionsToRender.length===answersToRender.length){const list=questionsToRender.map((question,index)=>{return{question,answer:answersToRender[index]};});setFaqList(list);}},[questionsToRender,answersToRender]);return faqList;};exports.useGenerateFAQ=useGenerateFAQ;