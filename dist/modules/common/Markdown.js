'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});const jsx_runtime_1=require('react/jsx-runtime');const Typography_1=__importDefault(require('@material-ui/core/Typography'));const react_markdown_1=__importDefault(require('react-markdown'));const remark_gfm_1=__importDefault(require('remark-gfm'));const remark_breaks_1=__importDefault(require('remark-breaks'));const core_1=require('@material-ui/core');const getSrcPathForLocalImage=src=>{return require(`../../assets/markdown/${src}`).default;};const MarkDownImg=(0,core_1.styled)('img')({maxWidth:'100%'});const MarkdownParagraph=props=>{return(0,jsx_runtime_1.jsx)(Typography_1.default,{style:{fontWeight:300},children:props.children});};const MarkdownLink=props=>{return(0,jsx_runtime_1.jsx)(core_1.Link,{target:'_blank',color:'secondary',underline:'always',href:props.href,children:props.children});};const MarkdownHeader=props=>{switch(props.level){case 1:return(0,jsx_runtime_1.jsx)(Typography_1.default,{variant:'h1',children:props.children});case 2:return(0,jsx_runtime_1.jsx)(Typography_1.default,{variant:'h2',children:props.children});case 3:return(0,jsx_runtime_1.jsx)(Typography_1.default,{variant:'h3',children:props.children});case 4:return(0,jsx_runtime_1.jsx)(Typography_1.default,{variant:'h4',children:props.children});case 5:return(0,jsx_runtime_1.jsx)(Typography_1.default,{variant:'h5',children:props.children});case 6:return(0,jsx_runtime_1.jsx)(Typography_1.default,{variant:'h6',children:props.children});default:return(0,jsx_runtime_1.jsx)(Typography_1.default,{variant:'h6',children:props.children});}};const components={h1:MarkdownHeader,h2:MarkdownHeader,h3:MarkdownHeader,h4:MarkdownHeader,h5:MarkdownHeader,h6:MarkdownHeader,p:MarkdownParagraph,a:MarkdownLink,img:props=>{const {src}=props;if(!src){return null;}if(src.includes('~local/')){const srcWithoutSuffix=src.replace('~local/','');return(0,jsx_runtime_1.jsx)(MarkDownImg,Object.assign({},props,{src:getSrcPathForLocalImage(srcWithoutSuffix)}));}return(0,jsx_runtime_1.jsx)(MarkDownImg,Object.assign({},props));}};const Markdown=props=>{return(0,jsx_runtime_1.jsx)(react_markdown_1.default,Object.assign({components:components,remarkPlugins:[[remark_gfm_1.default],[remark_breaks_1.default]]},props));};exports.default=Markdown;