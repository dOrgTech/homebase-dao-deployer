'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.NetworkSheet=void 0;const jsx_runtime_1=require('react/jsx-runtime');const core_1=require('@material-ui/core');const react_1=require('react');const useTezos_1=require('../../../services/beacon/hooks/useTezos');const ResponsiveDialog_1=require('./ResponsiveDialog');const ChangeNetworkButton_1=require('./ChangeNetworkButton');const ContentContainer_1=require('./ContentContainer');const state_1=require('../../creator/state');const SheetItem=(0,core_1.styled)(ContentContainer_1.ContentContainer)({'height':50,'& > *':{height:'100%'},'cursor':'pointer'});const SUPPORTED_NETWORKS=['mainnet','ghostnet'];const NetworkSheet=props=>{const {network,changeNetwork}=(0,useTezos_1.useTezos)();const {dispatch}=(0,react_1.useContext)(state_1.CreatorContext);const options=(0,react_1.useMemo)(()=>SUPPORTED_NETWORKS.filter(n=>n!==network),[network]);return(0,jsx_runtime_1.jsx)(ResponsiveDialog_1.ResponsiveDialog,{open:props.open,onClose:props.onClose,title:'Choose Network',children:(0,jsx_runtime_1.jsx)(core_1.Grid,{container:true,direction:'column',style:{gap:20},children:options.map((networkOption,i)=>(0,jsx_runtime_1.jsx)(SheetItem,{item:true,onClick:()=>{props.onClose();changeNetwork(networkOption);dispatch({type:state_1.ActionTypes.CLEAR_CACHE});},children:(0,jsx_runtime_1.jsxs)(core_1.Grid,{container:true,justifyContent:'center',alignItems:'center',style:{gap:8},children:[(0,jsx_runtime_1.jsx)(core_1.Grid,{item:true,children:(0,jsx_runtime_1.jsx)(ChangeNetworkButton_1.ColorDot,{color:ChangeNetworkButton_1.networkDotColorMap[networkOption]})}),(0,jsx_runtime_1.jsx)(core_1.Grid,{item:true,children:(0,jsx_runtime_1.jsx)(core_1.Typography,{variant:'h6',color:'textPrimary',children:(0,core_1.capitalize)(networkOption)})})]})},`network-${i}`))})});};exports.NetworkSheet=NetworkSheet;