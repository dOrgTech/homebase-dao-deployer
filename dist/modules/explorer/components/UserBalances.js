'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.UserBalancesBox=exports.UserBalances=void 0;const jsx_runtime_1=require('react/jsx-runtime');const core_1=require('@material-ui/core');const react_1=require('react');const useTezos_1=require('../../../services/beacon/hooks/useTezos');const useDAO_1=require('../../../services/services/dao/hooks/useDAO');const BalancesBox=(0,core_1.styled)(core_1.Grid)(({theme})=>({minHeight:'137px',maxHeight:'344px',padding:'38px 38px',background:theme.palette.primary.main,boxSizing:'border-box',borderRadius:8,boxShadow:'none',['@media (max-width:409.99px)']:{maxHeight:'325px'}}));const BalanceHeaderText=(0,core_1.styled)(core_1.Typography)({paddingBottom:10,fontSize:18,['@media (max-width:710px)']:{fontSize:16},['@media (max-width:635px)']:{fontSize:18,paddingBottom:8},['@media (max-width:409.99px)']:{fontSize:16}});const BalanceGrid=(0,core_1.styled)(core_1.Grid)({['@media (max-width:636px)']:{marginBottom:25},['@media (max-width:409.99px)']:{marginBottom:20}});const Balance=(0,core_1.styled)(core_1.Typography)({fontSize:36,lineHeight:'0.9',fontWeight:300,['@media (max-width:1030px)']:{fontSize:30}});const BalanceToken=(0,core_1.styled)(core_1.Typography)({fontSize:24,fontWeight:300});const UserBalances=({daoId,children})=>{const {account}=(0,useTezos_1.useTezos)();const {data:dao,ledger}=(0,useDAO_1.useDAO)(daoId);const theme=(0,core_1.useTheme)();const isExtraSmall=(0,core_1.useMediaQuery)(theme.breakpoints.down(635));const balances=(0,react_1.useMemo)(()=>{const userBalances={available:{displayName:'Available Balance'},pending:{displayName:'Pending Balance'},staked:{displayName:'Staked Balance'}};if(!ledger){return userBalances;}const userLedger=ledger.find(l=>l.holder.address.toLowerCase()===account.toLowerCase());if(!userLedger){userBalances.available.balance='-';userBalances.pending.balance='-';userBalances.staked.balance='-';return userBalances;}userBalances.available.balance=userLedger.available_balance.dp(10,1).toString();userBalances.pending.balance=userLedger.pending_balance.dp(10,1).toString();userBalances.staked.balance=userLedger.staked.dp(10,1).toString();return userBalances;},[account,ledger]);const balancesList=Object.keys(balances).map(key=>balances[key]);return(0,jsx_runtime_1.jsxs)(core_1.Grid,{container:true,direction:'column',style:{gap:40},children:[children,(0,jsx_runtime_1.jsx)(core_1.Grid,{item:true,container:true,direction:isExtraSmall?'column':'row',justifyContent:'space-between',children:dao&&balancesList.map(({displayName,balance},i)=>(0,jsx_runtime_1.jsxs)(core_1.Grid,{item:true,children:[(0,jsx_runtime_1.jsx)(BalanceHeaderText,{color:'secondary',align:isExtraSmall?'center':'left',children:displayName}),(0,jsx_runtime_1.jsxs)(BalanceGrid,{container:true,alignItems:'baseline',spacing:1,justifyContent:isExtraSmall?'center':'flex-start',children:[(0,jsx_runtime_1.jsx)(core_1.Grid,{item:true,children:(0,jsx_runtime_1.jsx)(Balance,{color:'textPrimary',children:balance})}),(0,jsx_runtime_1.jsx)(core_1.Grid,{item:true,children:(0,jsx_runtime_1.jsx)(BalanceToken,{color:'textPrimary',children:balance!=='-'?dao.data.token.symbol:''})})]})]},`balance-${i}`))})]});};exports.UserBalances=UserBalances;const UserBalancesBox=({daoId})=>{return(0,jsx_runtime_1.jsx)(BalancesBox,{item:true,children:(0,jsx_runtime_1.jsx)(exports.UserBalances,{daoId:daoId})});};exports.UserBalancesBox=UserBalancesBox;