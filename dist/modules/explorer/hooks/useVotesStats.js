'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.useVotesStats=void 0;const bignumber_js_1=require('bignumber.js');const react_1=require('react');const useVotesStats=({quorumThreshold,upVotes,downVotes})=>{return(0,react_1.useMemo)(()=>{const support=upVotes.isGreaterThanOrEqualTo(downVotes);const votesSum=upVotes.plus(downVotes);const votes=support?upVotes:downVotes;const downVotesQuorumPercentage=getRelativeVotePercentage(downVotes,quorumThreshold);const upVotesQuorumPercentage=getRelativeVotePercentage(upVotes,quorumThreshold);const votesQuorumPercentage=getRelativeVotePercentage(votes,quorumThreshold);const downVotesSumPercentage=getRelativeVotePercentage(downVotes,votesSum);const upVotesSumPercentage=getRelativeVotePercentage(upVotes,votesSum);const votesSumPercentage=getRelativeVotePercentage(votes,votesSum);return{support,votesSum,votes,downVotesQuorumPercentage,upVotesQuorumPercentage,votesQuorumPercentage,downVotesSumPercentage,upVotesSumPercentage,votesSumPercentage};},[quorumThreshold,upVotes,downVotes]);};exports.useVotesStats=useVotesStats;const getRelativeVotePercentage=(votes,quorumOrSum)=>{const result=quorumOrSum?votes.multipliedBy(100).div(quorumOrSum):new bignumber_js_1.BigNumber(0);return result.isGreaterThan(100)?new bignumber_js_1.BigNumber(100):result;};