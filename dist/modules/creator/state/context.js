'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});exports.CreatorContext=exports.CreatorProvider=exports.reducer=exports.INITIAL_STATE=exports.INITIAL_MIGRATION_STATE=void 0;const jsx_runtime_1=require('react/jsx-runtime');const react_1=require('react');const useLocalStorage_1=__importDefault(require('../../common/hooks/useLocalStorage'));const types_1=require('./types');const useTezos_1=require('../../../services/beacon/hooks/useTezos');const bakingBad_1=require('../../../services/bakingBad');const utils_1=require('../../../services/beacon/utils');const deploymentStatus={deploying:false,successful:false};const LOCAL_STORAGE_KEY='creatorParams';exports.INITIAL_MIGRATION_STATE={template:'lambda',orgSettings:{name:'',symbol:'',description:'',governanceToken:{address:'',tokenId:'0'},administrator:'',guardian:''},votingSettings:{votingBlocks:0,proposeStakeRequired:'0',returnedTokenPercentage:0,minXtzAmount:0,maxXtzAmount:0,proposalFlushBlocks:0,proposalExpiryBlocks:0,votingBlocksDay:0,votingBlocksHours:0,votingBlocksMinutes:5,proposalFlushBlocksDay:0,proposalFlushBlocksHours:0,proposalFlushBlocksMinutes:5,proposalExpiryBlocksDay:0,proposalExpiryBlocksHours:0,proposalExpiryBlocksMinutes:5},quorumSettings:{quorumThreshold:2,minQuorumAmount:1,maxQuorumAmount:90,quorumChange:5,quorumMaxChange:19}};const getInitialState=data=>{const network=(0,utils_1.getTezosNetwork)();data.votingSettings.votingBlocksDay=network===bakingBad_1.networkNameMap.ghostnet?0:3;data.votingSettings.votingBlocksHours=network===bakingBad_1.networkNameMap.ghostnet?0:0;data.votingSettings.votingBlocksMinutes=network===bakingBad_1.networkNameMap.ghostnet?5:0;data.votingSettings.proposalFlushBlocksDay=network===bakingBad_1.networkNameMap.ghostnet?0:1;data.votingSettings.proposalFlushBlocksHours=network===bakingBad_1.networkNameMap.ghostnet?0:0;data.votingSettings.proposalFlushBlocksMinutes=network===bakingBad_1.networkNameMap.ghostnet?5:0;data.votingSettings.proposalExpiryBlocksDay=network===bakingBad_1.networkNameMap.ghostnet?0:6;data.votingSettings.proposalExpiryBlocksHours=network===bakingBad_1.networkNameMap.ghostnet?0:0;data.votingSettings.proposalExpiryBlocksMinutes=network===bakingBad_1.networkNameMap.ghostnet?5:0;return data;};exports.INITIAL_STATE={data:getInitialState(exports.INITIAL_MIGRATION_STATE),deploymentStatus};const CreatorContext=(0,react_1.createContext)({state:exports.INITIAL_STATE,dispatch:()=>null,updateCache:()=>null});exports.CreatorContext=CreatorContext;const reducer=(state,action)=>{switch(action.type){case types_1.ActionTypes.UPDATE_DEPLOYMENT_STATUS:const {contract,deploying}=action.status;state=Object.assign(Object.assign({},state),{deploymentStatus:{contract,deploying,successful:false}});return state;case types_1.ActionTypes.UPDATE_NAVIGATION_BAR:state=Object.assign(Object.assign({},state),{next:action.next,back:action.back});return state;case types_1.ActionTypes.UPDATE_ORGANIZATION_SETTINGS:localStorage.setItem('creator-started','true');state=Object.assign(Object.assign({},state),{data:Object.assign(Object.assign({},state.data),{orgSettings:action.org})});return state;case types_1.ActionTypes.UPDATE_QUORUM_SETTINGS:state=Object.assign(Object.assign({},state),{data:Object.assign(Object.assign({},state.data),{quorumSettings:action.quorum})});return state;case types_1.ActionTypes.UPDATE_VOTING_SETTINGS:state=Object.assign(Object.assign({},state),{data:Object.assign(Object.assign({},state.data),{votingSettings:action.voting})});return state;case types_1.ActionTypes.UPDATE_TEMPLATE:state=Object.assign(Object.assign({},state),{data:Object.assign(Object.assign({},state.data),{template:action.template})});return state;case types_1.ActionTypes.CLEAR_CACHE:state=Object.assign(Object.assign({},exports.INITIAL_STATE),{deploymentStatus:Object.assign(Object.assign({},exports.INITIAL_STATE.deploymentStatus),{successful:true})});return state;}};exports.reducer=reducer;const updateInitialState=(network,values)=>{values.votingSettings.votingBlocksDay=network===bakingBad_1.networkNameMap.ghostnet?0:3;values.votingSettings.votingBlocksHours=network===bakingBad_1.networkNameMap.ghostnet?0:0;values.votingSettings.votingBlocksMinutes=network===bakingBad_1.networkNameMap.ghostnet?5:0;values.votingSettings.proposalFlushBlocksDay=network===bakingBad_1.networkNameMap.ghostnet?0:1;values.votingSettings.proposalFlushBlocksHours=network===bakingBad_1.networkNameMap.ghostnet?0:0;values.votingSettings.proposalFlushBlocksMinutes=network===bakingBad_1.networkNameMap.ghostnet?5:0;values.votingSettings.proposalExpiryBlocksDay=network===bakingBad_1.networkNameMap.ghostnet?0:6;values.votingSettings.proposalExpiryBlocksHours=network===bakingBad_1.networkNameMap.ghostnet?0:0;values.votingSettings.proposalExpiryBlocksMinutes=network===bakingBad_1.networkNameMap.ghostnet?5:0;return values;};const CreatorProvider=({children})=>{const [data,updateCache]=(0,useLocalStorage_1.default)(LOCAL_STORAGE_KEY,exports.INITIAL_STATE.data);const isCreatorStarted=localStorage.getItem('creator-started');const {network}=(0,useTezos_1.useTezos)();const updatedData=isCreatorStarted?data:updateInitialState(network,data);const stateWithCache=Object.assign(Object.assign({},exports.INITIAL_STATE),{updatedData});const [state,dispatch]=(0,react_1.useReducer)(exports.reducer,stateWithCache);const contextValue=(0,react_1.useMemo)(()=>{return{state,dispatch};},[state,dispatch]);return(0,jsx_runtime_1.jsx)(CreatorContext.Provider,{value:Object.assign(Object.assign({},contextValue),{updateCache}),children:children});};exports.CreatorProvider=CreatorProvider;