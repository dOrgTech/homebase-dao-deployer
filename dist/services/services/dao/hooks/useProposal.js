'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};Object.defineProperty(exports,'__esModule',{value:true});exports.useProposal=void 0;const react_query_1=require('react-query');const types_1=require('../mappers/proposal/types');const services_1=require('../services');const useDAO_1=require('./useDAO');const useProposal=(contractAddress,proposalKey)=>{const {data:dao,isLoading,error,cycleInfo}=(0,useDAO_1.useDAO)(contractAddress);const queryResults=(0,react_query_1.useQuery)(['proposal',contractAddress,proposalKey],()=>__awaiter(void 0,void 0,void 0,function*(){const response=yield(0,services_1.getProposal)(contractAddress,proposalKey);const proposal=response.daos[0].proposals[0];switch(dao===null||dao===void 0?void 0:dao.data.type){case'lambda':return new types_1.LambdaProposal(proposal,dao);default:throw new Error(`DAO with address '${dao===null||dao===void 0?void 0:dao.data.address}' has an unrecognized type '${dao===null||dao===void 0?void 0:dao.data.type}'`);}}),{refetchInterval:30000,enabled:!!dao&&!!cycleInfo});return{data:queryResults.data,isLoading:isLoading||queryResults.isLoading,error:error||queryResults.error};};exports.useProposal=useProposal;