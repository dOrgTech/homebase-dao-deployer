'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};Object.defineProperty(exports,'__esModule',{value:true});exports.useDAOLambda=void 0;const react_query_1=require('react-query');const useDAO_1=require('../../../services/dao/hooks/useDAO');const useTezos_1=require('../../../beacon/hooks/useTezos');const lambdas_1=require('../../../bakingBad/lambdas');const useDAOLambda=(contractAddress,lambda_name)=>{const {data:dao}=(0,useDAO_1.useDAO)(contractAddress);const {network}=(0,useTezos_1.useTezos)();const {data}=(0,react_query_1.useQuery)(['lambdas',contractAddress,lambda_name],()=>__awaiter(void 0,void 0,void 0,function*(){return yield(0,lambdas_1.getDAOLambda)(dao.data.address,network,lambda_name);}),{enabled:!!dao});return data;};exports.useDAOLambda=useDAOLambda;