'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});exports.useTezosBalance=void 0;const react_query_1=require('react-query');const useDAO_1=require('../../../services/dao/hooks/useDAO');const useTezos_1=require('../../../beacon/hooks/useTezos');const bignumber_js_1=__importDefault(require('bignumber.js'));const utils_1=require('../../utils');const useTezosBalance=contractAddress=>{const {data:dao}=(0,useDAO_1.useDAO)(contractAddress);const {tezos}=(0,useTezos_1.useTezos)();const result=(0,react_query_1.useQuery)(['tezosBalance',contractAddress],()=>__awaiter(void 0,void 0,void 0,function*(){const balance=yield tezos.tz.getBalance(dao.data.address);return(0,utils_1.mutezToXtz)(new bignumber_js_1.default(balance.toString()));}),{enabled:!!dao&&!!tezos});return result;};exports.useTezosBalance=useTezosBalance;